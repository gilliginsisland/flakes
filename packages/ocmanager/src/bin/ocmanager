#!/bin/bash
set -euo pipefail

PREFIX=$(realpath -- "$(dirname -- "$(realpath -- "${BASH_SOURCE[0]}")")/..")
CSD_WRAPPER="${PREFIX}/lib/ocmanager/csd-post"

notify() {
	terminal-notifier -title "${PROFILE}" -group "${PROFILE}-$1" -message "$2" ${3+-subtitle "$3"} -ignoreDnD -appIcon /System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/GenericNetworkIcon.icns
}

base64_pad() {
	printf "${1}%1.$((${#1}%8))s" ========;
}

usage() {
	echo "script usage: $(basename $0) [-t] -p /path/to/profile"
}

## opts
while getopts 'p:th' OPTION; do
	case "$OPTION" in
		p) PROFILE="$OPTARG" ;;
		t) TOKEN_MODE="yubiotp" ;;
		h) usage; exit 0 ;;
		?) usage >&2; exit 1 ;;
	esac
done
shift "$(($OPTIND -1))"

if [[ -z "${PROFILE-}" ]]; then
	usage; exit 0
fi

KEYCHAIN_ACCOUNT="ocmanager:${PROFILE}"

getSecureInput() {
	# popup to ask for password
	osascript <<-EOF
		set icn to path to resource "GenericNetworkIcon.icns" in bundle file ((path to "csrv" as Unicode text) & "CoreTypes.bundle")
		set passwordPrompt to display dialog "$1\n\nPassword for ${PROFILE}" default answer "" with icon icn buttons {"Cancel", "Continue"} default button "Continue" with title "Cisco Openconnect VPN" with hidden answer
		get text returned of passwordPrompt
	EOF
}

getCredentials() {
	local password

	# popup to ask for password
	password="$(getSecureInput "$1")"

	# save password in keychain
	security add-generic-password -U -a "$KEYCHAIN_ACCOUNT" -w "$password" -s "$KEYCHAIN_ACCOUNT"
}

startProxy() {
	local password

	## on first run there wont be a password in the keychain at all
	until password=$(security find-generic-password -a "$KEYCHAIN_ACCOUNT" -w -s "$KEYCHAIN_ACCOUNT"); do
		notify "error" "No Credentials"
		getCredentials "No Credentials In Keychain"
	done

	[ "${TOKEN_MODE-}" == "yubiotp" ] && password="${password}$(getSecureInput "Touch YubiKey")"

	notify "status" "Authenticating"
	eval $(openconnect \
		--config "$PROFILE" \
		--csd-wrapper="$CSD_WRAPPER" \
		--passwd-on-stdin \
		--no-external-auth \
		--non-inter \
		--authenticate \
		<<< "$password")

	notify "status" "Connecting..."
	openconnect --config "$PROFILE" \
		--cookie-on-stdin \
		--server "$CONNECT_URL" \
		--servercert "$FINGERPRINT" \
		--resolve "$RESOLVE" \
		<<< "$COOKIE" &
	pid=$!

	notify "status" "Connection Established"
	wait $pid
}

until { STDERR=$({ startProxy 1>&3 2> >(tee /dev/fd/4 1>&5); } 5>&1); } 3>&1 4>&2; do
	# for non login failures just quit
	if [[ "$STDERR" != *"Login failed"* ]]; then
		echo "Unknown failure" 1>&2
		notify "error" "$STDERR" "Unknown failure"
		exit 1
	fi

	# for login problems we request new credentials
	notify "error" "$STDERR" "Invalid Credentials"
	getCredentials "Incorrect Username / Password combination";
done

notify "status" "Disconnected"

exit 0
